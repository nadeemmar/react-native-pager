{"version":3,"file":"react-native-pager.esm.js","sources":["../src/pager.tsx","../src/util.ts","../src/pagination.tsx"],"sourcesContent":["import React, {\r\n  useState,\r\n  Children,\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n} from 'react';\r\nimport { StyleSheet, LayoutChangeEvent, ViewStyle } from 'react-native';\r\nimport Animated from 'react-native-reanimated';\r\nimport {\r\n  PanGestureHandler,\r\n  State,\r\n  PanGestureHandlerProperties,\r\n} from 'react-native-gesture-handler';\r\n\r\nexport type SpringConfig = {\r\n  damping: Animated.Adaptable<number>;\r\n  mass: Animated.Adaptable<number>;\r\n  stiffness: Animated.Adaptable<number>;\r\n  overshootClamping: Animated.Adaptable<number> | boolean;\r\n  restSpeedThreshold: Animated.Adaptable<number>;\r\n  restDisplacementThreshold: Animated.Adaptable<number>;\r\n  toValue: Animated.Adaptable<number>;\r\n};\r\n\r\n// copied from react-native-reanimated for now, can't get the export\r\nexport enum Extrapolate {\r\n  EXTEND = 'extend',\r\n  CLAMP = 'clamp',\r\n  IDENTITY = 'identity',\r\n}\r\n\r\ninterface InterpolationConfig {\r\n  inputRange: ReadonlyArray<Animated.Adaptable<number>>;\r\n  outputRange: ReadonlyArray<Animated.Adaptable<number>>;\r\n  extrapolate?: Extrapolate;\r\n  extrapolateLeft?: Extrapolate;\r\n  extrapolateRight?: Extrapolate;\r\n}\r\n\r\ntype iInterpolationFn = (\r\n  offset: Animated.Node<number>\r\n) => Animated.Node<number>;\r\n\r\ninterface iInterpolationConfig extends InterpolationConfig {\r\n  unit?: string;\r\n}\r\n\r\ntype iTransformProp = {\r\n  [transformProp: string]: iInterpolationConfig | iInterpolationFn;\r\n};\r\n\r\nexport interface iPageInterpolation {\r\n  [animatedProp: string]:\r\n    | iTransformProp[]\r\n    | iInterpolationConfig\r\n    | iInterpolationFn;\r\n}\r\n\r\nconst VERTICAL = 1;\r\nconst HORIZONTAL = 2;\r\nconst UNSET = -1;\r\nconst TRUE = 1;\r\nconst FALSE = 0;\r\n\r\nconst {\r\n  event,\r\n  block,\r\n  Value,\r\n  divide,\r\n  cond,\r\n  eq,\r\n  add,\r\n  stopClock,\r\n  Clock,\r\n  set,\r\n  clockRunning,\r\n  multiply,\r\n  sub,\r\n  call,\r\n  max,\r\n  min,\r\n  greaterThan,\r\n  abs,\r\n  ceil,\r\n  interpolate,\r\n  concat,\r\n  neq,\r\n  and,\r\n  startClock,\r\n  spring,\r\n  // @ts-ignore\r\n  debug,\r\n} = Animated;\r\n\r\nexport interface iPager {\r\n  activeIndex?: number;\r\n  onChange?: (nextIndex: number) => void;\r\n  initialIndex?: number;\r\n  children: React.ReactNode[];\r\n  springConfig?: Partial<SpringConfig>;\r\n  pageInterpolation?: iPageInterpolation;\r\n  panProps?: Partial<PanGestureHandlerProperties>;\r\n  pageSize?: number;\r\n  threshold?: number;\r\n  minIndex?: number;\r\n  maxIndex?: number;\r\n  adjacentChildOffset?: number;\r\n  style?: ViewStyle;\r\n  containerStyle?: ViewStyle;\r\n  animatedValue?: Animated.Value<number>;\r\n  animatedIndex?: Animated.Value<number>;\r\n  type?: 'horizontal' | 'vertical';\r\n  clamp?: {\r\n    prev?: number;\r\n    next?: number;\r\n  };\r\n  clampDrag?: {\r\n    prev?: number;\r\n    next?: number;\r\n  };\r\n}\r\nconst REALLY_BIG_NUMBER = 1000000000;\r\n\r\n// at its core, this component converts an activeIndex integer value to an Animated.Value\r\n// this animated value represents all intermediate values of a pager, e.g when a user is dragging, the index\r\n// value might be anything between 1 -> 2 as they are moving. when a gesture is completed, it figures out\r\n// the next activeIndex, snaps to it and passes it back. it also handles snapping to different indices when the activeIndex\r\n// prop changes.\r\n\r\n// all styles and positioning of child screens can be computed from this one value, based on a childs index and\r\n// any style config props passed to the Pager.\r\n\r\n// pretty much all other props passed to the Pager are configurations for different behaviours of what is described above\r\n\r\nfunction Pager({\r\n  activeIndex: parentActiveIndex,\r\n  onChange: parentOnChange,\r\n  initialIndex = 0,\r\n  children,\r\n  springConfig,\r\n  panProps = {},\r\n  pageSize = 1,\r\n  threshold = 0.1,\r\n  minIndex = 0,\r\n  maxIndex: parentMax,\r\n  adjacentChildOffset = 10,\r\n  style,\r\n  containerStyle,\r\n  type = 'horizontal',\r\n  pageInterpolation,\r\n  clamp = {},\r\n  clampDrag = {},\r\n  animatedValue,\r\n}: iPager) {\r\n  const context = useContext(PagerContext);\r\n\r\n  const isControlled = parentActiveIndex !== undefined;\r\n\r\n  const [_activeIndex, _onChange] = useState(initialIndex);\r\n\r\n  const activeIndex = isControlled\r\n    ? (parentActiveIndex as number)\r\n    : context\r\n    ? (context[0] as number)\r\n    : (_activeIndex as number);\r\n\r\n  const numberOfScreens = Children.count(children);\r\n\r\n  const maxIndex =\r\n    parentMax === undefined\r\n      ? Math.ceil((numberOfScreens - 1) / pageSize)\r\n      : parentMax;\r\n\r\n  const onChange = isControlled\r\n    ? (parentOnChange as any)\r\n    : context\r\n    ? (context[1] as any)\r\n    : (_onChange as any);\r\n\r\n  const dragX = memoize(new Value(0));\r\n  const dragY = memoize(new Value(0));\r\n  const gestureState = memoize(new Value(0));\r\n\r\n  const handleGesture = memoize(\r\n    event(\r\n      [\r\n        {\r\n          nativeEvent: {\r\n            translationX: dragX,\r\n            translationY: dragY,\r\n          },\r\n        },\r\n      ],\r\n      { useNativeDriver: true }\r\n    )\r\n  );\r\n\r\n  const handleStateChange = memoize(\r\n    event(\r\n      [\r\n        {\r\n          nativeEvent: {\r\n            state: gestureState,\r\n          },\r\n        },\r\n      ],\r\n      {\r\n        useNativeDriver: true,\r\n      }\r\n    )\r\n  );\r\n\r\n  let initialWidth = UNSET;\r\n  if (style && style.width) {\r\n    if (typeof style.width === 'number') {\r\n      initialWidth = style.width;\r\n    }\r\n  }\r\n\r\n  let initialHeight = UNSET;\r\n  if (style && style.height) {\r\n    if (typeof style.height === 'number') {\r\n      initialHeight = style.height;\r\n    }\r\n  }\r\n\r\n  const [width, setWidth] = useState(initialWidth);\r\n  const [height, setHeight] = useState(initialHeight);\r\n\r\n  // assign references based on vertical / horizontal configurations\r\n  const dimension = memoize(new Value(0));\r\n  const targetDimension = type === 'vertical' ? 'height' : 'width';\r\n  const targetTransform = type === 'vertical' ? 'translateY' : 'translateX';\r\n  const delta = type === 'vertical' ? dragY : dragX;\r\n\r\n  const layoutDimension = type === 'vertical' ? height : width;\r\n\r\n  // `totalDimension` on the container view is required for android layouts to work properly\r\n  // otherwise translations move the panHandler off of the screen\r\n  // set the total width of the container view to the sum width of all the screens\r\n  const totalDimension = multiply(dimension, numberOfScreens);\r\n\r\n  function handleLayout({ nativeEvent: { layout } }: LayoutChangeEvent) {\r\n    layout.width !== width && setWidth(layout.width);\r\n    layout.height !== height && setHeight(layout.height);\r\n  }\r\n\r\n  const TYPE = type === 'vertical' ? VERTICAL : HORIZONTAL;\r\n\r\n  // props that might change over time should be reactive:\r\n  const animatedThreshold = useAnimatedValue(threshold);\r\n  const clampDragPrev = useAnimatedValue(clampDrag.prev, REALLY_BIG_NUMBER);\r\n  const clampDragNext = useAnimatedValue(clampDrag.next, REALLY_BIG_NUMBER);\r\n  const animatedMaxIndex = useAnimatedValue(maxIndex);\r\n  const animatedMinIndex = useAnimatedValue(minIndex);\r\n\r\n  // set the initial position - priority to direct prop over context, and context over uncontrolled\r\n  const _position = memoize(new Value(activeIndex));\r\n  const position = animatedValue\r\n    ? animatedValue\r\n    : context\r\n    ? context[2]\r\n    : _position;\r\n\r\n  // pan event values to track\r\n  const dragStart = memoize(new Value(0));\r\n  const swiping = memoize(new Value(FALSE));\r\n  const nextIndex = memoize(new Value(activeIndex));\r\n  const animatedActiveIndex = memoize(new Value(activeIndex));\r\n  const change = memoize(sub(animatedActiveIndex, position));\r\n  const absChange = memoize(abs(change));\r\n  const shouldTransition = memoize(greaterThan(absChange, animatedThreshold));\r\n  const indexChange = memoize(new Value(0));\r\n\r\n  // clamp drag values between the configured clamp props\r\n  // e.g prev => 0.5, next => 0.5 means change can only be between [-0.5, 0.5]\r\n  // minMax order is reversed because next is negative in translation values\r\n  const clampedDelta = memoize(\r\n    min(\r\n      max(divide(delta, dimension), multiply(clampDragNext, -1)),\r\n      clampDragPrev\r\n    )\r\n  );\r\n\r\n  const clock = memoize(new Clock());\r\n\r\n  // snap focus to activeIndex when it updates\r\n  useEffect(() => {\r\n    if (activeIndex >= minIndex && activeIndex <= maxIndex) {\r\n      nextIndex.setValue(activeIndex);\r\n    }\r\n  }, [activeIndex, minIndex, maxIndex]);\r\n\r\n  // animatedIndex represents pager position with an animated value\r\n  // this value is used to compute the transformations of the container screen\r\n  // its also used to compute the offsets of child screens, and any other consumers\r\n  const animatedIndex = memoize(\r\n    block([\r\n      cond(\r\n        eq(gestureState, State.ACTIVE),\r\n        [\r\n          cond(clockRunning(clock), stopClock(clock)),\r\n          // captures the initial drag value on first drag event\r\n          cond(swiping, 0, [set(dragStart, position), set(swiping, TRUE)]),\r\n\r\n          set(position, sub(dragStart, clampedDelta)),\r\n        ],\r\n        [\r\n          // on release -- figure out if the index needs to change, and what index it should change to\r\n          cond(swiping, [\r\n            set(swiping, FALSE),\r\n            cond(shouldTransition, [\r\n              // rounds index change if pan gesture greater than just one screen\r\n              set(indexChange, ceil(absChange)),\r\n              // nextIndex set to the next snap point\r\n              set(\r\n                nextIndex,\r\n                cond(\r\n                  greaterThan(change, 0),\r\n                  min(\r\n                    max(\r\n                      sub(animatedActiveIndex, indexChange),\r\n                      animatedMinIndex\r\n                    ),\r\n                    animatedMaxIndex\r\n                  ),\r\n                  min(\r\n                    max(\r\n                      add(animatedActiveIndex, indexChange),\r\n                      animatedMinIndex\r\n                    ),\r\n                    animatedMaxIndex\r\n                  )\r\n                )\r\n              ),\r\n              // update w/ value that will be snapped to\r\n              call([nextIndex], ([nextIndex]) => onChange(nextIndex)),\r\n            ]),\r\n          ]),\r\n\r\n          // set animatedActiveIndex for next swipe event\r\n          set(animatedActiveIndex, nextIndex),\r\n          set(position, runSpring(clock, position, nextIndex, springConfig)),\r\n        ]\r\n      ),\r\n      position,\r\n    ])\r\n  );\r\n\r\n  const clampPrevValue = useAnimatedValue(clamp.prev, numberOfScreens);\r\n  const clampNextValue = useAnimatedValue(clamp.next, numberOfScreens);\r\n\r\n  // stop child screens from translating beyond the bounds set by clamp props:\r\n  const minimum = memoize(\r\n    multiply(sub(animatedIndex, clampPrevValue), dimension)\r\n  );\r\n\r\n  const maximum = memoize(\r\n    multiply(add(animatedIndex, clampNextValue), dimension)\r\n  );\r\n\r\n  const animatedPageSize = useAnimatedValue(pageSize);\r\n\r\n  // container offset -- this is the window of focus for active screens\r\n  // it shifts around based on the animatedIndex value\r\n  const containerTranslation = memoize(\r\n    multiply(animatedIndex, dimension, animatedPageSize, -1)\r\n  );\r\n\r\n  // slice the children that are rendered by the <Pager />\r\n  // this enables very large child lists to render efficiently\r\n  // the downside is that children are unmounted after they pass this threshold\r\n  // it's an optional prop, however a default value of ~20 is set here to prevent\r\n  // possible performance bottlenecks to those not aware of the prop or what it does\r\n\r\n  // this will slice adjacentChildOffset number of children previous and after\r\n  // the current active child index into a smaller child array\r\n  const adjacentChildren =\r\n    adjacentChildOffset !== undefined\r\n      ? children.slice(\r\n          Math.max(activeIndex - adjacentChildOffset, 0),\r\n          Math.min(activeIndex + adjacentChildOffset + 1, numberOfScreens)\r\n        )\r\n      : children;\r\n\r\n  // grabbing the height property from the style prop if there is no container style, this reduces\r\n  // the chances of messing up the layout with containerStyle configurations\r\n  // can be overridden by the prop itself, but its likely that this is what is intended most of the time\r\n  // also has the benefit of covering 100% width of container, meaning better pan coverage on android\r\n  const defaultContainerStyle =\r\n    style && style.height ? { height: style.height } : undefined;\r\n\r\n  function renderChildren() {\r\n    // waiting for initial layout - except when testing\r\n    if (width === UNSET) {\r\n      return null;\r\n    }\r\n\r\n    return adjacentChildren.map((child: any, i) => {\r\n      // use map instead of React.Children because we want to track\r\n      // the keys of these children by there index\r\n      // React.Children shifts these key values intelligently, but it\r\n      // causes issues with the memoized values in <Page /> components\r\n      let index = i;\r\n\r\n      if (adjacentChildOffset !== undefined) {\r\n        index =\r\n          activeIndex <= adjacentChildOffset\r\n            ? i\r\n            : activeIndex - adjacentChildOffset + i;\r\n      }\r\n\r\n      return (\r\n        <IndexProvider index={index} key={index}>\r\n          <FocusProvider focused={index === activeIndex}>\r\n            <Page\r\n              index={index}\r\n              animatedIndex={animatedIndex}\r\n              minimum={minimum}\r\n              maximum={maximum}\r\n              dimension={dimension}\r\n              targetTransform={targetTransform}\r\n              targetDimension={targetDimension}\r\n              pageInterpolation={pageInterpolation}\r\n            >\r\n              {child}\r\n            </Page>\r\n          </FocusProvider>\r\n        </IndexProvider>\r\n      );\r\n    });\r\n  }\r\n\r\n  // extra Animated.Views below may seem redundant but they preserve applied styles e.g padding and margin\r\n  // of the page views\r\n  return (\r\n    <Animated.View\r\n      style={containerStyle || defaultContainerStyle || { flex: 1 }}\r\n    >\r\n      <Animated.Code\r\n        key={layoutDimension}\r\n        exec={cond(\r\n          // dimension already set to last layout\r\n          and(eq(dimension, width), eq(dimension, height)),\r\n          [],\r\n          [\r\n            cond(\r\n              eq(TYPE, VERTICAL),\r\n              set(dimension, height),\r\n              set(dimension, width)\r\n            ),\r\n          ]\r\n        )}\r\n      />\r\n\r\n      <PanGestureHandler\r\n        {...panProps}\r\n        onGestureEvent={handleGesture}\r\n        onHandlerStateChange={handleStateChange}\r\n      >\r\n        <Animated.View style={{ flex: 1 }}>\r\n          <Animated.View style={style || { flex: 1 }}>\r\n            <Animated.View style={{ flex: 1 }} onLayout={handleLayout}>\r\n              <Animated.View\r\n                style={{\r\n                  flex: 1,\r\n                  [targetDimension]: totalDimension,\r\n                  transform: [{ [targetTransform]: containerTranslation }],\r\n                }}\r\n              >\r\n                {renderChildren()}\r\n              </Animated.View>\r\n            </Animated.View>\r\n          </Animated.View>\r\n        </Animated.View>\r\n      </PanGestureHandler>\r\n    </Animated.View>\r\n  );\r\n}\r\n\r\ninterface iPage {\r\n  children: React.ReactNode;\r\n  index: number;\r\n  minimum: Animated.Node<number>;\r\n  maximum: Animated.Node<number>;\r\n  dimension: Animated.Node<number>;\r\n  targetTransform: 'translateX' | 'translateY';\r\n  targetDimension: 'width' | 'height';\r\n  pageInterpolation: iPageInterpolation | undefined;\r\n  animatedIndex: Animated.Value<number>;\r\n}\r\n\r\nfunction Page({\r\n  children,\r\n  index,\r\n  minimum,\r\n  maximum,\r\n  dimension,\r\n  targetTransform,\r\n  targetDimension,\r\n  pageInterpolation,\r\n  animatedIndex,\r\n}: iPage) {\r\n  // compute the absolute position of the page based on index and dimension\r\n  // this means that it's not relative to any other child, which is good because\r\n  // it doesn't rely on a mechanism like flex, which requires all children to be present\r\n  // to properly position pages\r\n  const position = memoize(multiply(index, dimension));\r\n\r\n  // min-max the position based on clamp values\r\n  // this means the <Page /> will have a container that is always positioned\r\n  // in the same place, but the inner view can be translated within these bounds\r\n  const translation = memoize(min(max(position, minimum), maximum));\r\n\r\n  const defaultStyle = memoize({\r\n    // map to height / width value depending on vertical / horizontal configuration\r\n    // this is crucial to getting child views to properly lay out\r\n    [targetDimension]: dimension,\r\n    // min-max the position based on clamp values\r\n    // this means the <Page /> will have a container that is always positioned\r\n    // in the same place, but the inner view can be translated within these bounds\r\n    transform: [\r\n      {\r\n        [targetTransform]: translation,\r\n      },\r\n    ],\r\n  });\r\n\r\n  // compute the relative offset value to the current animated index so\r\n  // that <Page /> can use interpolation values that are in sync with drag gestures\r\n  const offset = memoize(sub(index, animatedIndex));\r\n\r\n  // apply interpolation configs to <Page />\r\n  const interpolatedStyles = memoize(\r\n    interpolateWithConfig(offset, pageInterpolation)\r\n  );\r\n\r\n  // take out zIndex here as it needs to be applied to siblings\r\n  let { zIndex, ...otherStyles } = interpolatedStyles;\r\n\r\n  // zIndex is not a requirement of interpolation\r\n  // it will be clear when someone needs it as views will overlap with some configurations\r\n  if (!zIndex) {\r\n    zIndex = 0;\r\n  }\r\n\r\n  return (\r\n    <Animated.View\r\n      style={{\r\n        ...StyleSheet.absoluteFillObject,\r\n        ...defaultStyle,\r\n        zIndex,\r\n      }}\r\n    >\r\n      <Animated.View style={[StyleSheet.absoluteFillObject, otherStyles]}>\r\n        {children}\r\n      </Animated.View>\r\n    </Animated.View>\r\n  );\r\n}\r\n\r\n// utility to update animated values without changing their reference\r\n// this is key for using memoized Animated.Values and prevents costly rerenders\r\nfunction useAnimatedValue(\r\n  value?: number,\r\n  defaultValue = 0\r\n): Animated.Value<number> {\r\n  const initialValue = value !== undefined ? value : defaultValue;\r\n  const animatedValue = memoize(new Value(initialValue));\r\n\r\n  useEffect(() => {\r\n    if (value !== undefined) {\r\n      animatedValue.setValue(value);\r\n    }\r\n  }, [value]);\r\n\r\n  return animatedValue;\r\n}\r\n\r\ntype iPagerContext = [\r\n  number,\r\n  (nextIndex: number) => void,\r\n  Animated.Value<number>\r\n];\r\n\r\nconst PagerContext = createContext<undefined | iPagerContext>(undefined);\r\n\r\ninterface iPagerProvider {\r\n  children: React.ReactNode;\r\n  initialIndex?: number;\r\n  activeIndex?: number;\r\n  onChange?: (nextIndex: number) => void;\r\n}\r\n\r\nfunction PagerProvider({\r\n  children,\r\n  initialIndex = 0,\r\n  activeIndex: parentActiveIndex,\r\n  onChange: parentOnChange = () =>\r\n    console.warn(\r\n      '<PagerProvider /> should have an onChange() prop if it is controlled'\r\n    ),\r\n}: iPagerProvider) {\r\n  const [_activeIndex, _setActiveIndex] = useState(initialIndex);\r\n\r\n  const isControlled = parentActiveIndex !== undefined;\r\n\r\n  const activeIndex = isControlled ? parentActiveIndex : _activeIndex;\r\n  const onChange = isControlled ? parentOnChange : _setActiveIndex;\r\n\r\n  const animatedIndex = memoize(new Value(activeIndex));\r\n\r\n  return (\r\n    <PagerContext.Provider\r\n      value={[activeIndex, onChange, animatedIndex] as iPagerContext}\r\n    >\r\n      {typeof children === 'function'\r\n        ? children({ activeIndex, onChange, animatedIndex })\r\n        : children}\r\n    </PagerContext.Provider>\r\n  );\r\n}\r\n\r\nfunction usePager(): iPagerContext {\r\n  const context = useContext(PagerContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error(`usePager() must be used within a <PagerProvider />`);\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\n// provide hook for child screens to access pager focus:\r\nconst FocusContext = React.createContext(false);\r\n\r\ninterface iFocusProvider {\r\n  children: React.ReactNode;\r\n  focused: boolean;\r\n}\r\n\r\nfunction FocusProvider({ focused, children }: iFocusProvider) {\r\n  return (\r\n    <FocusContext.Provider value={focused}>{children}</FocusContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useFocus() {\r\n  const focused = useContext(FocusContext);\r\n\r\n  return focused;\r\n}\r\n\r\nconst IndexContext = React.createContext<undefined | number>(undefined);\r\n\r\ninterface iIndexProvider {\r\n  children: React.ReactNode;\r\n  index: number;\r\n}\r\n\r\nfunction IndexProvider({ children, index }: iIndexProvider) {\r\n  return (\r\n    <IndexContext.Provider value={index}>{children}</IndexContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useIndex() {\r\n  const index = useContext(IndexContext);\r\n\r\n  if (index === undefined) {\r\n    throw new Error(`useIndex() must be used within an <IndexProvider />`);\r\n  }\r\n\r\n  return index;\r\n}\r\n\r\nfunction useOnFocus(fn: Function) {\r\n  const focused = useFocus();\r\n\r\n  useEffect(() => {\r\n    if (focused) {\r\n      fn();\r\n    }\r\n  }, [focused]);\r\n}\r\n\r\nfunction useAnimatedIndex() {\r\n  const pager = usePager();\r\n  return pager[2];\r\n}\r\n\r\nfunction useOffset(index: number) {\r\n  const animatedIndex = useAnimatedIndex();\r\n  const offset = memoize(sub(index, animatedIndex));\r\n\r\n  return offset;\r\n}\r\n\r\nfunction useInterpolation(\r\n  pageInterpolation: iPageInterpolation,\r\n  index?: number\r\n) {\r\n  const _index = index !== undefined ? index : useIndex();\r\n  const offset = useOffset(_index);\r\n  const styles = memoize(interpolateWithConfig(offset, pageInterpolation));\r\n  return styles;\r\n}\r\n\r\nfunction interpolateWithConfig(\r\n  offset: Animated.Node<number>,\r\n  pageInterpolation?: iPageInterpolation\r\n): ViewStyle {\r\n  if (!pageInterpolation) {\r\n    return {};\r\n  }\r\n\r\n  return Object.keys(pageInterpolation).reduce((styles: any, key: any) => {\r\n    const currentStyle = pageInterpolation[key];\r\n\r\n    if (Array.isArray(currentStyle)) {\r\n      const _style = currentStyle.map((interpolationConfig: any) =>\r\n        interpolateWithConfig(offset, interpolationConfig)\r\n      );\r\n\r\n      styles[key] = _style;\r\n      return styles;\r\n    }\r\n\r\n    if (typeof currentStyle === 'object') {\r\n      let _style;\r\n      const { unit, ...rest } = currentStyle;\r\n      if (currentStyle.unit) {\r\n        _style = concat(interpolate(offset, rest), currentStyle.unit);\r\n      } else {\r\n        _style = interpolate(offset, currentStyle);\r\n      }\r\n\r\n      styles[key] = _style;\r\n      return styles;\r\n    }\r\n\r\n    if (typeof currentStyle === 'function') {\r\n      const _style = currentStyle(offset);\r\n      styles[key] = _style;\r\n      return styles;\r\n    }\r\n\r\n    return styles;\r\n  }, {});\r\n}\r\n\r\nfunction memoize(value: any): any {\r\n  const ref = React.useRef(value);\r\n  return ref.current;\r\n}\r\n\r\nconst DEFAULT_SPRING_CONFIG = {\r\n  stiffness: 1000,\r\n  damping: 500,\r\n  mass: 3,\r\n  overshootClamping: false,\r\n  restDisplacementThreshold: 0.01,\r\n  restSpeedThreshold: 0.01,\r\n};\r\n\r\nfunction runSpring(\r\n  clock: Animated.Clock,\r\n  position: Animated.Value<number>,\r\n  toValue: Animated.Node<number>,\r\n  springConfig?: Partial<SpringConfig>\r\n) {\r\n  const state = {\r\n    finished: new Value(0),\r\n    velocity: new Value(0),\r\n    position: position,\r\n    time: new Value(0),\r\n  };\r\n\r\n  const config = {\r\n    ...DEFAULT_SPRING_CONFIG,\r\n    ...springConfig,\r\n    toValue: new Value(0),\r\n  };\r\n\r\n  return block([\r\n    cond(\r\n      clockRunning(clock),\r\n      [\r\n        cond(neq(config.toValue, toValue), [\r\n          set(state.finished, 0),\r\n          set(config.toValue, toValue),\r\n        ]),\r\n      ],\r\n      [\r\n        set(state.finished, 0),\r\n        set(state.time, 0),\r\n        set(state.velocity, 0),\r\n        set(config.toValue, toValue),\r\n        startClock(clock),\r\n      ]\r\n    ),\r\n    spring(clock, state, config),\r\n    cond(state.finished, [stopClock(clock), set(state.position, position)]),\r\n    state.position,\r\n  ]);\r\n}\r\n\r\nexport {\r\n  Pager,\r\n  PagerProvider,\r\n  PagerContext,\r\n  usePager,\r\n  useFocus,\r\n  useOffset,\r\n  useOnFocus,\r\n  useIndex,\r\n  useAnimatedIndex,\r\n  useInterpolation,\r\n  IndexProvider,\r\n  FocusProvider,\r\n};\r\n","import { useRef } from 'react';\r\nimport { ViewStyle } from 'react-native';\r\nimport Animated from 'react-native-reanimated';\r\nimport { iPageInterpolation, SpringConfig } from './pager';\r\n\r\nconst {\r\n  interpolate,\r\n  concat,\r\n  Value,\r\n  clockRunning,\r\n  cond,\r\n  neq,\r\n  set,\r\n  startClock,\r\n  spring,\r\n  stopClock,\r\n  block,\r\n} = Animated;\r\n\r\nfunction interpolateWithConfig(\r\n  offset: Animated.Node<number>,\r\n  pageInterpolation?: iPageInterpolation\r\n): ViewStyle {\r\n  if (!pageInterpolation) {\r\n    return {};\r\n  }\r\n\r\n  return Object.keys(pageInterpolation).reduce((styles: any, key: any) => {\r\n    const currentStyle = pageInterpolation[key];\r\n\r\n    if (Array.isArray(currentStyle)) {\r\n      const _style = currentStyle.map((interpolationConfig: any) =>\r\n        interpolateWithConfig(offset, interpolationConfig)\r\n      );\r\n\r\n      styles[key] = _style;\r\n      return styles;\r\n    }\r\n\r\n    if (typeof currentStyle === 'object') {\r\n      let _style;\r\n      const { unit, ...rest } = currentStyle;\r\n      if (currentStyle.unit) {\r\n        _style = concat(interpolate(offset, rest), currentStyle.unit);\r\n      } else {\r\n        _style = interpolate(offset, currentStyle);\r\n      }\r\n\r\n      styles[key] = _style;\r\n      return styles;\r\n    }\r\n\r\n    if (typeof currentStyle === 'function') {\r\n      const _style = currentStyle(offset);\r\n      styles[key] = _style;\r\n      return styles;\r\n    }\r\n\r\n    return styles;\r\n  }, {});\r\n}\r\n\r\nfunction memoize(value: any): any {\r\n  const ref = useRef(value);\r\n  return ref.current;\r\n}\r\n\r\nconst DEFAULT_SPRING_CONFIG = {\r\n  stiffness: 1000,\r\n  damping: 500,\r\n  mass: 3,\r\n  overshootClamping: false,\r\n  restDisplacementThreshold: 0.01,\r\n  restSpeedThreshold: 0.01,\r\n};\r\n\r\nfunction runSpring(\r\n  clock: Animated.Clock,\r\n  position: Animated.Value<number>,\r\n  toValue: Animated.Node<number>,\r\n  springConfig?: Partial<SpringConfig>\r\n) {\r\n  const state = {\r\n    finished: new Value(0),\r\n    velocity: new Value(0),\r\n    position: position,\r\n    time: new Value(0),\r\n  };\r\n\r\n  const config = {\r\n    ...DEFAULT_SPRING_CONFIG,\r\n    ...springConfig,\r\n    toValue: new Value(0),\r\n  };\r\n\r\n  return block([\r\n    cond(\r\n      clockRunning(clock),\r\n      [\r\n        cond(neq(config.toValue, toValue), [\r\n          set(state.finished, 0),\r\n          set(config.toValue, toValue),\r\n        ]),\r\n      ],\r\n      [\r\n        set(state.finished, 0),\r\n        set(state.time, 0),\r\n        set(state.velocity, 0),\r\n        set(config.toValue, toValue),\r\n        startClock(clock),\r\n      ]\r\n    ),\r\n    spring(clock, state, config),\r\n    cond(state.finished, [stopClock(clock), set(state.position, position)]),\r\n    state.position,\r\n  ]);\r\n}\r\n\r\nexport { interpolateWithConfig, memoize, runSpring };\r\n","import React, { Children } from 'react';\r\nimport Animated from 'react-native-reanimated';\r\nimport { ViewStyle, LayoutChangeEvent } from 'react-native';\r\nimport { iPageInterpolation, useOffset, useAnimatedIndex } from './pager';\r\nimport { memoize, interpolateWithConfig } from './util';\r\n\r\nconst { Value, divide, multiply, add } = Animated;\r\n\r\ninterface iPagination {\r\n  children: React.ReactNode;\r\n  pageInterpolation: iPageInterpolation;\r\n  style?: ViewStyle;\r\n}\r\n\r\nconst DEFAULT_PAGINATION_STYLE: ViewStyle = {\r\n  height: 50,\r\n  width: '100%',\r\n  flexDirection: 'row',\r\n};\r\n\r\nfunction Pagination({ children, pageInterpolation, style }: iPagination) {\r\n  return (\r\n    <Animated.View\r\n      style={{\r\n        ...DEFAULT_PAGINATION_STYLE,\r\n        ...style,\r\n      }}\r\n    >\r\n      {Children.map(children, (child: any, index) => (\r\n        <PaginationItem\r\n          index={index}\r\n          pageInterpolation={pageInterpolation}\r\n          style={child.props.style}\r\n        >\r\n          {child}\r\n        </PaginationItem>\r\n      ))}\r\n    </Animated.View>\r\n  );\r\n}\r\n\r\ninterface iPaginationItem {\r\n  children: React.ReactNode;\r\n  pageInterpolation: iPageInterpolation;\r\n  index: number;\r\n  style?: ViewStyle;\r\n}\r\n\r\nfunction PaginationItem({\r\n  children,\r\n  pageInterpolation,\r\n  index,\r\n  style,\r\n}: iPaginationItem) {\r\n  const offset = useOffset(index);\r\n  const configStyles = memoize(\r\n    interpolateWithConfig(offset, pageInterpolation)\r\n  );\r\n\r\n  return (\r\n    <Animated.View style={[style || { flex: 1 }, configStyles]}>\r\n      {children}\r\n    </Animated.View>\r\n  );\r\n}\r\n\r\ninterface iSlider {\r\n  numberOfScreens: number;\r\n  style: ViewStyle;\r\n}\r\n\r\nconst DEFAULT_SLIDER_STYLE = {\r\n  height: 2,\r\n  backgroundColor: 'aquamarine',\r\n};\r\n\r\nfunction Slider({ numberOfScreens, style }: iSlider) {\r\n  const animatedIndex = useAnimatedIndex();\r\n  const width = memoize(new Value(0));\r\n\r\n  function handleLayout({ nativeEvent: { layout } }: LayoutChangeEvent) {\r\n    width.setValue(layout.width as any);\r\n  }\r\n\r\n  const sliderWidth = divide(width, numberOfScreens);\r\n  const translation = memoize(multiply(animatedIndex, sliderWidth));\r\n\r\n  return (\r\n    <Animated.View onLayout={handleLayout}>\r\n      <Animated.View\r\n        style={{\r\n          width: sliderWidth,\r\n          transform: [{ translateX: translation }],\r\n          ...DEFAULT_SLIDER_STYLE,\r\n          ...style,\r\n        }}\r\n      />\r\n    </Animated.View>\r\n  );\r\n}\r\n\r\nfunction Progress({ numberOfScreens, style }: iSlider) {\r\n  const animatedIndex = useAnimatedIndex();\r\n\r\n  const width = memoize(new Value(0));\r\n\r\n  function handleLayout({ nativeEvent: { layout } }: LayoutChangeEvent) {\r\n    width.setValue(layout.width as any);\r\n  }\r\n\r\n  const sliderWidth = memoize(\r\n    divide(width, numberOfScreens, divide(1, add(animatedIndex, 1)))\r\n  );\r\n\r\n  return (\r\n    <Animated.View onLayout={handleLayout}>\r\n      <Animated.View\r\n        style={{\r\n          width: sliderWidth,\r\n          height: 2,\r\n          backgroundColor: 'rebeccapurple',\r\n          ...DEFAULT_SLIDER_STYLE,\r\n          ...style,\r\n        }}\r\n      />\r\n    </Animated.View>\r\n  );\r\n}\r\n\r\nexport { Pagination, Slider, Progress };\r\n"],"names":["Extrapolate","VERTICAL","HORIZONTAL","UNSET","TRUE","FALSE","event","Animated","block","Value","divide","cond","eq","add","stopClock","Clock","set","clockRunning","multiply","sub","call","max","min","greaterThan","abs","ceil","interpolate","concat","neq","and","startClock","spring","debug","REALLY_BIG_NUMBER","Pager","parentActiveIndex","activeIndex","parentOnChange","onChange","initialIndex","children","springConfig","panProps","pageSize","threshold","minIndex","parentMax","maxIndex","adjacentChildOffset","style","containerStyle","type","pageInterpolation","clamp","clampDrag","animatedValue","context","useContext","PagerContext","isControlled","undefined","useState","_activeIndex","_onChange","numberOfScreens","Children","count","Math","dragX","memoize","dragY","gestureState","handleGesture","nativeEvent","translationX","translationY","useNativeDriver","handleStateChange","state","initialWidth","width","initialHeight","height","setWidth","setHeight","dimension","targetDimension","targetTransform","delta","layoutDimension","totalDimension","handleLayout","layout","TYPE","animatedThreshold","useAnimatedValue","clampDragPrev","prev","clampDragNext","next","animatedMaxIndex","animatedMinIndex","_position","position","dragStart","swiping","nextIndex","animatedActiveIndex","change","absChange","shouldTransition","indexChange","clampedDelta","clock","useEffect","setValue","animatedIndex","State","ACTIVE","runSpring","clampPrevValue","clampNextValue","minimum","maximum","animatedPageSize","containerTranslation","adjacentChildren","slice","defaultContainerStyle","renderChildren","map","child","i","index","React","IndexProvider","key","FocusProvider","focused","Page","View","flex","Code","exec","PanGestureHandler","onGestureEvent","onHandlerStateChange","onLayout","transform","translation","defaultStyle","offset","interpolatedStyles","interpolateWithConfig","zIndex","otherStyles","StyleSheet","absoluteFillObject","value","defaultValue","initialValue","createContext","PagerProvider","console","warn","_setActiveIndex","Provider","usePager","Error","FocusContext","useFocus","IndexContext","useIndex","useOnFocus","fn","useAnimatedIndex","pager","useOffset","useInterpolation","_index","styles","Object","keys","reduce","currentStyle","Array","isArray","_style","interpolationConfig","unit","rest","ref","useRef","current","DEFAULT_SPRING_CONFIG","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","toValue","finished","velocity","time","config","DEFAULT_PAGINATION_STYLE","flexDirection","Pagination","PaginationItem","props","configStyles","DEFAULT_SLIDER_STYLE","backgroundColor","Slider","sliderWidth","translateX","Progress"],"mappings":"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"}